@model WallProject.Models.SearchViewModel
@{
    ViewBag.Title = "NazreNo";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<br/>

<script src="http://maps.google.com/maps/api/js?&key=AIzaSyD5v8i6Yux715Wa2rW-nwX3w2Ba1FolQuM" type="text/javascript"></script>


<style>
    #map_canvas img { max-width: none; }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br/>

@ViewBag.Walls
<div class="container">
    <h3 style="margin-bottom: 30px" class="text-center">دیوار های مهربانی در نقشه زیر مشخص شده اند</h3>
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <div class="form-group">
            @Html.LabelFor(m => m.SearchLocation, new {@class = "col-md-1 control-label"})
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.SearchLocation, new {@class = "form-control"})
            </div>
            <div class="col-md-3">
                <input type="submit" class="btn btn-info btn-block" value="جستجو"/>
            </div>
        </div>
    </div>
    <div class="col-md-2"></div>

    <div id="map_canvas" style="height: 550px; width: 100%; margin-top: 100px">

    </div>

</div>
<br/>


<!-- This is the div that will contain the Google Map -->
@*<div id="map_canvas" style="height: 550px;"></div>*@

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">
        <script type="text/javascript">
            $(document).ready(function() {
                Initialize();
            });
            var gmarkers = [];

            // Where all the fun happens
            function Initialize() {

                // Google has tweaked their interface somewhat - this tells the api to use that new UI
                google.maps.visualRefresh = true;
                var karaj = new google.maps.LatLng(35.833716, 50.9825577);


                // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                var mapOptions = {
                    zoom: 12,
                    center: karaj,
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                };

                // This makes the div with id "map_canvas" a google map
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                // a sample list of JSON encoded data of places to visit in Tunisia
                // you can either make up a JSON list server side, or call it from a controller using JSONResult
                //var data = [
                //    { "Id": 1, "PlaceName": "کرج", "GeoLong": "35.83814", "GeoLat": "50.9404225" },
                //    { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
                //    { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
                //    { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
                //];


                $.ajax({
                    url: '@Url.Action("GetWalls")',
                    type: 'GET',
                    cache: false,
                    success: function(result) {
                        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                        $.each(result, function(i, item) {
                           //    alert(item.GeoLong);
                            var marker = new google.maps.Marker({
                                'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
                                'map': map,
                                'title': item.PlaceName
                            });

                            // Make the marker-pin blue!
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');

                            // put in some information about each json object - in this case, the opening hours.
                            var infowindow = new google.maps.InfoWindow({
                                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                            });

                            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                            google.maps.event.addListener(marker, 'click', function() {
                                infowindow.open(map, marker);
                            });
                        });
                        google.maps.event.addListener(map, 'click', function (event) {
                            //alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
                            var newMarker = new google.maps.Marker({
                                'position': new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()),
                                'map': map,
                                'title': 'دیوار جدید'
                            });
                            google.maps.event.addListener(newMarker, 'click', function () {
                                newMarker.setMap(null);
                                gmarkers.pop(newMarker);
                            });
                            gmarkers.push(newMarker);
                        });
                    }
                });
            }
        </script>
    </section>
}


